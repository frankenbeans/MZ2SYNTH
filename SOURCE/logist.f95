! ----------------------------------------------------------------------
!     LOGIST.F
!
!     LOGISTIC FUNCTION (SIGMOID CURVE)
!
!     COPYRIGHT (C) 2024 BY E. LAMPRECHT - ALL RIGHTS RESERVED.
! ----------------------------------------------------------------------

MODULE Logist
  USE Constant
  IMPLICIT NONE

CONTAINS
  
  ELEMENTAL FUNCTION LOGISTF(X)
    IMPLICIT NONE
    REAL(KIND=RKIND) :: LOGISTF
    ! --- DUMMY ARG ---
    REAL(KIND=RKIND) :: X
    INTENT(IN)       :: X
    ! --- EXE CODE  ---
    LOGISTF=1.0_RKIND / (1.0_RKIND + EXP(-X))
    ! --- END CODE  ---
  END FUNCTION LOGISTF

  SUBROUTINE LTDATA(ADATA,ADIML,ADIMR,LXVAL,RXVAL)
    IMPLICIT NONE
    ! --- DUMMY ARG ---
    REAL(KIND=RKIND) :: ADATA,LXVAL,RXVAL
    INTEGER          :: ADIML,ADIMR
    INTENT(INOUT)    :: ADATA
    INTENT(IN)       :: LXVAL,RXVAL,ADIML,ADIMR
    DIMENSION        :: ADATA(ADIML:ADIMR)
    ! --- VARIABLES ---
    INTEGER          :: J
    REAL(KIND=RKIND) :: D2XM,D2XC
    ! --- EXE CODE ---
    IF (.NOT.ADIML.LT.ADIMR) GOTO 900
    IF (.NOT.LXVAL.LT.RXVAL) GOTO 910
    D2XM=(RXVAL-LXVAL)/(REAL(ADIMR,RKIND)-REAL(ADIML,RKIND))
    D2XC=LXVAL-D2XM*REAL(ADIML,RKIND)
    DO J=ADIML,ADIMR
       ADATA(J)=LOGISTF(D2XM*REAL(J,RKIND)+D2XC)
    END DO
    ! --- END CODE ---
    RETURN
800 FORMAT('! ERROR(LTDATA):',1X,A)
900 WRITE(*,800) 'EXPECTING ADIML.LT.ADIMR'
    STOP
910 WRITE(*,800) 'EXPECTING LXVAL.LT.RXVAL'
    STOP
  END SUBROUTINE LTDATA

  SUBROUTINE LTSCAL(ADATAO,ADATAI,ADIML,ADIMR,YVAL0,YVAL1)
    IMPLICIT NONE
    ! --- DUMMY ARG ---
    REAL(KIND=RKIND) :: ADATAO,ADATAI,YVAL0,YVAL1
    INTEGER          :: ADIML, ADIMR
    INTENT(INOUT)    :: ADATAO
    INTENT(IN)       :: ADATAI,ADIML,ADIMR,YVAL0,YVAL1
    DIMENSION        :: ADATAO(ADIML:ADIMR),ADATAI(ADIML:ADIMR)
    ! --- VARIABLES ---
    INTEGER          :: J
    REAL(KIND=RKIND) :: SCLM,SCLC
    ! --- EXE CODE  ---
    IF (.NOT.ADATAI(ADIML).LT.ADATAI(ADIMR)) GOTO 900
    SCLM=(YVAL1-YVAL0) / (ADATAI(ADIMR)-ADATAI(ADIML))
    SCLC=YVAL0-SCLM*ADATAI(ADIML)
    !$OMP PARALLEL DO
    DO J=ADIML,ADIMR
       ADATAO(J)=SCLM*ADATAI(J)+SCLC
    END DO
    !$OMP END PARALLEL DO
    ! --- END CODE  ---
    RETURN
800 FORMAT('! ERROR(LTSCAL):',1X,A)
900 WRITE(*,800) 'EXPECTING ADATAI(ADIML).LT.ADATAI(ADIMR)'
    STOP      
  END SUBROUTINE LTSCAL
    
END MODULE Logist
